import { ApiOperationOptions } from '@nestjs/swagger';

export const AIThesisDocs = {
	checkDuplicate: {
		summary: 'Check thesis duplicates using AI',
		description: `Check for potential duplicate theses using AI-powered analysis.\n\n- **Moderator and Lecturer access** (requires authentication and MODERATOR or LECTURER role).\n- Analyzes the specified thesis against the database to find potential duplicates.\n- Uses AI algorithms to compare thesis content, titles, and abstracts.\n- Returns a list of potentially similar theses with similarity scores.\n- Helps moderators and lecturers identify plagiarism or highly similar research topics.\n- Logs all duplicate check attempts and results.\n\n**Parameters:**\n- \`thesisId\`: Required - UUID of the thesis to check for duplicates.\n\n**Response includes:**\n- List of potentially duplicate theses\n- Similarity scores and matching criteria\n- Thesis information (title, abstract, author, etc.)\n- Confidence levels for each match\n\n**Use cases:**\n- Quality assurance during thesis review process\n- Plagiarism detection\n- Research topic overlap identification\n- Academic integrity enforcement\n- Lecturer supervision and guidance`,
	} as ApiOperationOptions,

	suggestThesesForGroup: {
		summary: 'Suggest theses for a group using AI',
		description: `Get AI-powered suggestions for theses that would be suitable for the specified group based on comprehensive analysis of group capabilities and thesis requirements.\n\n- **Authenticated access** (requires JWT authentication).\n- Analyzes group members' academic majors, responsibility skills, skill levels, and project direction.\n- Only suggests available theses that are approved, published, and not assigned to other groups within the same semester.\n- Retrieves thesis content from Pinecone vector database for enhanced matching accuracy.\n- Uses Gemini AI for intelligent compatibility scoring and reasoning.\n- Logs AI API usage for statistical tracking.\n\n**Parameters:**\n- \`groupId\`: Required - UUID of the group to suggest theses for.\n\n**Analysis Process:**\n- Fetches group information including all members with their majors and responsibility skills\n- Queries available theses with approval status, publication status, and semester filtering\n- Retrieves thesis content and metadata from Pinecone vector database\n- Performs AI-powered analysis using comprehensive evaluation criteria\n- Returns compatibility-scored suggestions with detailed reasoning\n\n**Evaluation Criteria:**\n- Skill Match (35% weight): Alignment between group members' responsibility skills and thesis requirements\n- Academic Background (25% weight): Compatibility between thesis topics and group members' academic majors\n- Content Relevance (20% weight): Relevance of thesis content to group's project direction and interests\n- Thesis Orientation (15% weight): Consideration of thesis orientation (AI, SE, Neutral) against group capabilities\n- Group Capacity (5% weight): Suitability of thesis complexity for group size and skill levels\n\n**Responsibility Skills Mapping:**\n- Backend: Server-side development, databases, APIs, system architecture\n- Frontend: User interfaces, web development, user experience\n- DevOps: Deployment, infrastructure, CI/CD, system administration\n- BA (Business Analysis): Requirements analysis, system design, documentation\n- AI: Machine learning, data science, artificial intelligence algorithms\n\n**Skill Level Interpretation:**\n- Level 0-2: Beginner/Basic understanding\n- Level 3-5: Intermediate/Working knowledge\n- Level 6-8: Advanced/Proficient\n- Level 9-10: Expert/Highly skilled\n\n**Response Structure:**\n- Reason: AI-generated explanation of analysis and recommendations\n- Theses array with compatibility scores (0-1 scale)\n- Each thesis includes ID, title, abbreviation, and all supervisors\n- Results filtered by compatibility threshold (>0.3) and limited to top 10\n- Sorted by compatibility score in descending order\n\n**Fallback Mechanisms:**\n- Graceful degradation when Pinecone vector database is unavailable\n- Basic thesis matching when AI analysis fails\n- Comprehensive error handling and logging\n\n**Use Cases:**\n- Intelligent thesis-group matching for academic projects\n- Skills-based thesis recommendation system\n- Academic planning and supervision assistance\n- Workload optimization and capability alignment\n- Research direction guidance for student groups`,
	} as ApiOperationOptions,
};
